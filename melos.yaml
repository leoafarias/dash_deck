name: superdeck_workspace

sdkPath: .fvm/flutter_sdk
packages:
  - packages/*

command:
  bootstrap:
    environment:
      sdk: ">=3.3.0 <4.0.0"
      flutter: ">=3.19.0"
    dependencies:
      collection: ^1.18.0 
  # publish:
    # hooks:
    #   pre: melos run gen:build

scripts:
  # ANALYSIS
  analyze:
    run: melos run analyze:dart && melos run analyze:dcm
    description: Run all static analysis checks.
    exec:
      failFast: true
      
  analyze:dart:
    run: melos exec -c 10 -- dart analyze --fatal-infos
    description: Run Dart static analysis checks.

  analyze:dcm:
    run: melos exec -c 10 -- dcm analyze . --fatal-style --fatal-performance --fatal-warnings
    description: Run DCM static analysis checks.
    packageFilters:
      dependsOn: "dart_code_metrics_presets"

  lint:fix:all:
    run: melos run lint:dart:fix && melos run lint:dcm:fix
    description: Run all static analysis checks and apply fixes.

  lint:dart:fix:
    run: melos exec -- dart fix --apply .
    description: Run Dart static analysis checks.

  lint:dcm:fix:
    run: melos exec -- dcm fix .
    description: Run DCM static analysis checks.
    packageFilters:
      dependsOn: "dart_code_metrics_presets"

  gen:watch:
    run: melos exec --order-dependents -- dart run build_runner watch --delete-conflicting-outputs
    description: Generate code for all packages
    packageFilters:
      dependsOn: "build_runner"

  gen:build:
    run: melos run gen:clean && melos exec --order-dependents -- dart run build_runner build --delete-conflicting-outputs
    description: Generate code for all packages
    packageFilters:
      dependsOn: "build_runner"

  gen:clean:
    run: melos exec --order-dependents -- dart run build_runner clean
    description: Clean generated code for all packages
    packageFilters:
      dependsOn: "build_runner"

  test:
    run: melos exec -- flutter test
    description: Run flutter test
    packageFilters:
      dirExists: test

  test:coverage:
    run: melos exec -- flutter test --coverage
    description: Run flutter test with coverage
    packageFilters:
      dirExists: test

  brb:
    run: melos run gen:build
    
  brbc: 
    run: melos run gen:clean
  fix:
    run: melos run lint:fix:all
  custom_lint_analyze:
    run: dart pub global activate custom_lint && melos exec --depends-on="mix_lint" custom_lint