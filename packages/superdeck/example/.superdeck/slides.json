[
  {
    "key": "596435967",
    "options": {},
    "markdown": "{@column}\n\n## Another image Another image Another image Another image Another image Another image Another image Another image Another image Another image {.here}\n\n{@column}\n\n\n\n{\"syntax\":\"\\ngraph TD\\n    A[Start] --> B[Input]\\n    B --> C[Process]\\n    C --> D[Output]\\n    D --> E[End]\\n\",\"asset\":{\"key\":\"wgsvOvJJ\",\"file_name\":\"wgsvOvJJ\",\"extension\":\"png\",\"type\":\"mermaid\"},\"scrollable\":false,\"type\":\"mermaid\"} {.code}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "## Another image Another image Another image Another image Another image Another image Another image Another image Another image Another image {.here}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "{\"syntax\":\"\\ngraph TD\\n    A[Start] --> B[Input]\\n    B --> C[Process]\\n    C --> D[Output]\\n    D --> E[End]\\n\",\"asset\":{\"key\":\"wgsvOvJJ\",\"file_name\":\"wgsvOvJJ\",\"extension\":\"png\",\"type\":\"mermaid\"},\"scrollable\":false,\"type\":\"mermaid\"} {.code}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "63415004",
    "options": {},
    "markdown": "",
    "sections": [],
    "comments": []
  },
  {
    "key": "734162632",
    "options": {},
    "markdown": "{@section}\n{@section flex: 2}\n{@column\n  align: center\n  flex: 2\n}\n\n\n```dart\nColumn(\n  crossAxisAlignment: CrossAxisAlignment.start,\n  children: spans.map((span) {\n    return RichText(\n      text: TextSpan(\n        style: interpolatedSpec.textStyle,\n        children: [span],\n      ),\n    );\n  }).toList(),\n)\n```{.code}\n\n{@column}\n\n{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}",
    "sections": [
      {
        "blocks": [],
        "type": "section"
      },
      {
        "blocks": [],
        "type": "section"
      },
      {
        "blocks": [
          {
            "name": "column",
            "flex": 2,
            "align": "center",
            "content": "```dart\nColumn(\n  crossAxisAlignment: CrossAxisAlignment.start,\n  children: spans.map((span) {\n    return RichText(\n      text: TextSpan(\n        style: interpolatedSpec.textStyle,\n        children: [span],\n      ),\n    );\n  }).toList(),\n)\n```{.code}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "flex": 2,
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "266014119",
    "options": {},
    "markdown": "{@column}\n\n## Another image{.here}\n\n{@column}\n\n{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "## Another image{.here}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "499899078",
    "options": {},
    "markdown": "{@column}\n\n{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}\n\n{@column}\n\n## Yes different image{.here}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "{\"asset\":{\"src\":\"https://picsum.photos/800/1400\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"} {.cover}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "## Yes different image{.here}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "395126440",
    "options": {},
    "markdown": "{@column\n    align: center_right\n}\n\n#### Leo Farias\n@leoafarias{.here}\n\n\n{@column\n    align: center_left\n}\n\n- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "align": "center_right",
            "content": "#### Leo Farias\n@leoafarias{.here}\n\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "align": "center_left",
            "content": "- Founder/CEO/CTO\n- Open Source Contributor\n- Flutter & Dart GDE\n- Passionate about UI/UX/DX",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "294428641",
    "options": {},
    "markdown": "{@column}\n\n{@column \n  align: center_left \n  flex: 2\n}\n> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration. \n\n{@column}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "flex": 2,
            "align": "center_left",
            "content": "> [!WARNING]  \n> This presentation contains live AI-generated content. Unexpected things may occur during the demonstration. \n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "814159457",
    "options": {},
    "markdown": "{@column \n  flex: 2 \n  align: center_right\n}\n### Generative UI\n{@column}\n## VS\n{@column flex: 2}\n### AI Assisted Code Generation",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "flex": 2,
            "align": "center_right",
            "content": "### Generative UI",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "## VS",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "flex": 2,
            "content": "### AI Assisted Code Generation",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "826732848",
    "options": {},
    "markdown": "### What is Generative UI?{.animate}\n\n{@column}\n\n- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
    "sections": [
      {
        "blocks": [
          {
            "content": "### What is Generative UI?{.animate}\n",
            "type": "content",
            "scrollable": false
          },
          {
            "name": "column",
            "content": "- LLMs are great at generating content based on context\n- GUIs are great at providing structured, interactive interfaces for user input and navigation",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "532075853",
    "options": {},
    "markdown": "# LLM ❤️ GUI{.animate}",
    "sections": [
      {
        "blocks": [
          {
            "content": "# LLM ❤️ GUI{.animate}",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "1027564960",
    "options": {},
    "markdown": "{@column}\n{@column\n  flex: 2\n  align: center\n}\nCreates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.{.animate}\n\n{@column}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "flex": 2,
            "align": "center",
            "content": "Creates dynamic, context-aware UIs by interpreting actions and maintaining state with LLMs for fluid, interactive responses.{.animate}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "688315070",
    "options": {},
    "markdown": "### Benefits of UI over Chat{.animate}\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
    "sections": [
      {
        "blocks": [
          {
            "content": "### Benefits of UI over Chat{.animate}\n\n- More intuitive and user-friendly, especially for complex tasks\n- Faster feedback loop between users and LLMs\n- Enhances efficiency and interaction",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "16064337",
    "options": {},
    "markdown": "{@column\n  flex: 3 \n  align: center\n}\n### Flutter is Well-Suited <br>for Generative UI\nBuilt for any screen: Ideal for generating<br>adaptive UIs across devices and platforms.\n{@column}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "flex": 3,
            "align": "center",
            "content": "### Flutter is Well-Suited <br>for Generative UI\nBuilt for any screen: Ideal for generating<br>adaptive UIs across devices and platforms.",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "146674156",
    "options": {},
    "markdown": "## How can LLMs Understtand Your UI?\n\n{@column}\n{\"asset\":{\"src\":\"assets/structured_output.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
    "sections": [
      {
        "blocks": [
          {
            "content": "## How can LLMs Understtand Your UI?\n",
            "type": "content",
            "scrollable": false
          },
          {
            "name": "column",
            "content": "{\"asset\":{\"src\":\"assets/structured_output.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "980992502",
    "options": {},
    "markdown": "{@column}\n\n### Structured Output\n\n{@column}\n```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n```",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "### Structured Output\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "content": "```dart\nfinal schema = Schema.array(\n  description: 'List of recipes',\n  items: Schema.object(\n    properties: {\n      'recipeName': Schema.string(\n        description: 'Name of the recipe.',\n        nullable: false,\n      ),\n    },\n    requiredProperties: ['recipeName'],\n  ),\n);\n```",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "954136583",
    "options": {},
    "markdown": "{@section}\n```dart\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\n```",
    "sections": [
      {
        "blocks": [],
        "type": "section"
      },
      {
        "blocks": [
          {
            "content": "```dart\n\nfinal model = GenerativeModel(\n  model: 'gemini-1.5-pro',\n  apiKey: apiKey,\n  generationConfig: GenerationConfig(\n    responseMimeType: 'application/json',\n    responseSchema: schema,\n  ),\n);\n\nfinal prompt = 'List a few popular cookie recipes.';\nfinal response = await model.generateContent([Content.text(prompt)]);\n\n```",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "771566282",
    "options": {},
    "markdown": "{@column}\n### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "### Color Palette Generator\n\nGenerate a color palette based on a given text.\n\n- Name of the palette\n- Font family\n- Font color\n- Color for each corner of the palette",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "991500743",
    "options": {},
    "markdown": "{@column}\n```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "content": "```dart\nfinal schema = Schema.object(properties: {\n  'name': Schema.string(\n    description:\n        'The text content to display on color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'font': Schema.enumString(\n    enumValues: ColorPaletteFontFamily.enumString,\n    description: 'The font to use for the poster text.',\n    nullable: false,\n  ),\n  'fontColor': Schema.string(\n    description: 'The hex color value of the poster text. Format: #FF0000',\n    nullable: false,\n  ),\n  'topLeftColor': Schema.string(\n    description:\n        'The hex color value top left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'topRightColor': Schema.string(\n    description:\n        'The hex color value top right corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomLeftColor': Schema.string(\n    description:\n        'The hex color value bottom left corner of color palette. Format: #FF0000',\n    nullable: false,\n  ),\n  'bottomRightColor': Schema.string(\n    description:\n        'The hex color value bottom right corner of color palette. Format: #FF0000',\n    nullable: false,\n  )\n}, requiredProperties: [\n  'name',\n  'font',\n  'fontColor',\n  'topLeftColor',\n  'topRightColor',\n  'bottomLeftColor',\n  'bottomRightColor',\n]);\n\n```",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "728789730",
    "options": {
      "style": "demo"
    },
    "markdown": "{@colorPalette\n  schema: true\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
    "sections": [
      {
        "blocks": [
          {
            "name": "colorPalette",
            "scrollable": false,
            "type": "widget",
            "schema": true,
            "prompts": [
              "tropical",
              "vibrant",
              "pastel",
              "chocolatey pink unicorn",
              "cyberpunk"
            ]
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "652768754",
    "options": {
      "style": "demo"
    },
    "markdown": "{@colorPalette\n  schema: false\n  prompts:\n    - tropical\n    - vibrant\n    - pastel\n    - chocolatey pink unicorn\n    - cyberpunk\n}",
    "sections": [
      {
        "blocks": [
          {
            "name": "colorPalette",
            "scrollable": false,
            "type": "widget",
            "schema": false,
            "prompts": [
              "tropical",
              "vibrant",
              "pastel",
              "chocolatey pink unicorn",
              "cyberpunk"
            ]
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "190763547",
    "options": {},
    "markdown": "## LLMs Orchestrate APIs",
    "sections": [
      {
        "blocks": [
          {
            "content": "## LLMs Orchestrate APIs",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "396516862",
    "options": {},
    "markdown": "{@section \n  align: center_right\n  flex: 2\n} \n\n### Gemini Function Calling\nThe Function Calling feature is in Beta release\n\n{@section flex: 5}\n\n{\"asset\":{\"src\":\"assets/llm_tools.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
    "sections": [
      {
        "blocks": [],
        "type": "section"
      },
      {
        "blocks": [
          {
            "content": "### Gemini Function Calling\nThe Function Calling feature is in Beta release\n",
            "type": "content",
            "scrollable": false
          }
        ],
        "flex": 2,
        "align": "center_right",
        "type": "section"
      },
      {
        "blocks": [
          {
            "content": "{\"asset\":{\"src\":\"assets/llm_tools.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
            "type": "content",
            "scrollable": false
          }
        ],
        "flex": 5,
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "452173386",
    "options": {
      "style": "demo"
    },
    "markdown": "{@lightControl \n  schema: true\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
    "sections": [
      {
        "blocks": [
          {
            "name": "lightControl",
            "scrollable": false,
            "type": "widget",
            "schema": true,
            "prompts": [
              "Dim the lights by 20",
              "Increase by 35",
              "Turn off the lights",
              "Set it to 80",
              "Lower by half",
              "Max brightness"
            ]
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "301134721",
    "options": {},
    "markdown": "{@column \n  align: bottom_right\n  flex: 2\n}\n\n### User Interaction{.heading}\nNatural Language way to interact with an LLM\n\n{@column\n  flex: 4\n}\n{\"asset\":{\"src\":\"assets/llm_interaction.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "flex": 2,
            "align": "bottom_right",
            "content": "### User Interaction{.heading}\nNatural Language way to interact with an LLM\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "flex": 4,
            "content": "{\"asset\":{\"src\":\"assets/llm_interaction.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "356584949",
    "options": {},
    "markdown": "{@column\n  align: center_left\n}\n### Widget Response{.heading}\n\n{@column \n  flex: 3\n}\n{\"asset\":{\"src\":\"assets/widget_response.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
    "sections": [
      {
        "blocks": [
          {
            "name": "column",
            "align": "center_left",
            "content": "### Widget Response{.heading}\n",
            "scrollable": false,
            "type": "widget"
          },
          {
            "name": "column",
            "flex": 3,
            "content": "{\"asset\":{\"src\":\"assets/widget_response.png\",\"type\":\"remote\"},\"scrollable\":false,\"type\":\"remote_image\"}",
            "scrollable": false,
            "type": "widget"
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "760668501",
    "options": {
      "style": "demo"
    },
    "markdown": "{@lightControl\n  schema: false\n  prompts:\n    - Dim the lights by 20\n    - Increase by 35\n    - Turn off the lights\n    - Set it to 80\n    - Lower by half\n    - Max brightness\n}",
    "sections": [
      {
        "blocks": [
          {
            "name": "lightControl",
            "scrollable": false,
            "type": "widget",
            "schema": false,
            "prompts": [
              "Dim the lights by 20",
              "Increase by 35",
              "Turn off the lights",
              "Set it to 80",
              "Lower by half",
              "Max brightness"
            ]
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "286896136",
    "options": {},
    "markdown": "## What if the tool to use is a widget schema?",
    "sections": [
      {
        "blocks": [
          {
            "content": "## What if the tool to use is a widget schema?",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "786608929",
    "options": {},
    "markdown": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
    "sections": [
      {
        "blocks": [
          {
            "content": "### Experimental\n\n```dart\nfinal schema = Schema.object(properties: {\n  'textFields': Schema.array(\n    description: 'A list of text fields',\n    items: TextFieldSchemaDto.schema,\n    nullable: true,\n  ),\n  'dropdowns': Schema.array(\n    description: 'A list of dropdowns',\n    items: DropdownSchemaDto.schema,\n    nullable: true,\n  ),\n  'colorPickers': Schema.array(\n    description: 'A list of colors pickers',\n    items: ColorPickerDtoSchema.schema,\n    nullable: true,\n  ),\n});\n\n```",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "142589368",
    "options": {
      "style": "demo"
    },
    "markdown": "{@widgetSchema\n  schema: false\n  prompts:\n    - Change top colors\n    - Change font\n    - Change all colors\n    - Change everything\n}",
    "sections": [
      {
        "blocks": [
          {
            "name": "widgetSchema",
            "scrollable": false,
            "type": "widget",
            "schema": false,
            "prompts": [
              "Change top colors",
              "Change font",
              "Change all colors",
              "Change everything"
            ]
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "801396691",
    "options": {},
    "markdown": "## The future of UI might be orchestrating user experiences rather than creating it.",
    "sections": [
      {
        "blocks": [
          {
            "content": "## The future of UI might be orchestrating user experiences rather than creating it.",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  },
  {
    "key": "310182512",
    "options": {},
    "markdown": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
    "sections": [
      {
        "blocks": [
          {
            "content": "### Thank you\n\nLeo Farias\n@leoafarias\n(GitHub, Twitter/X)",
            "type": "content",
            "scrollable": false
          }
        ],
        "type": "section"
      }
    ],
    "comments": []
  }
]